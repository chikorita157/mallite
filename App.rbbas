#tag ClassProtected Class AppInherits Application	#tag Event		Sub Close()		  // Checks if RememberPassword is check and erases password if not.		  If  prefs.BooleanRememberPassword = false then		    prefs.StringPassword = ""		  else		    // Encode and Store Password		    Prefs.StringPassword = encodebase64(mempassword)		  end if		  		End Sub	#tag EndEvent	#tag Event		Sub Open()		  // Check Login		  if  prefs.booleanAutologin = true then		    //Start auto login		    // using API to check credentials		    Dim socket1 as New HTTPSocket		    dim data as string		    memusername = Prefs.StringUsername		    mempassword = DecodeBase64(Prefs.stringpassword)		    loginenc = EncodeBase64(memusername + ":" + mempassword)		    socket1.setrequestheader "Authorization","Basic " + loginenc		    data= socket1.get("http://mal-api.com/account/verify_credentials",10)		    If socket1.httpstatuscode = 200 then		      Window1.show		    Else		      errboxshow("Login failed!", "Incorrect Username or Password. Check your Username and Password.")		      loginenc = ""		      Window2.show		    end if		  else		    Window2.show		  end if		End Sub	#tag EndEvent	#tag Event		Function UnhandledException(error As RuntimeException) As Boolean		  dim f as new errorreporting(error)		  f.ShowModal		  return true		End Function	#tag EndEvent	#tag MenuHandler		Function EditPreferences() As Boolean Handles EditPreferences.Action			winprefs.show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileAboutMALClientOSX() As Boolean Handles FileAboutMALClientOSX.Action			aboutwindow.show			return true					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileQuit() As Boolean Handles FileQuit.Action			Window1.q = true			quit			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpCheckforUpdates() As Boolean Handles HelpCheckforUpdates.Action			checkforupdates(false)		End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpMALClientOSXHelp() As Boolean Handles HelpMALClientOSXHelp.Action						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpMALClientOSXMALClub() As Boolean Handles HelpMALClientOSXMALClub.Action			ShowURL "http://myanimelist.net/clubs.php?cid=16059"						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpMALClientOSXWebsite() As Boolean Handles HelpMALClientOSXWebsite.Action			ShowURL "http://chikorita157.notcliche.com/malclientosx/"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpView() As Boolean Handles HelpView.Action			ShowURL "http://chikorita157.notcliche.com/malclientosx/MALHelp.pdf"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MyAnimeListIndustryNews() As Boolean Handles MyAnimeListIndustryNews.Action			showurl "http://myanimelist.net/news.php"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MyAnimeListViewYourAnimeList() As Boolean Handles MyAnimeListViewYourAnimeList.Action			ShowURL "http://myanimelist.net/animelist/" + Prefs.StringUsername			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MyAnimeListViewYourMangaList() As Boolean Handles MyAnimeListViewYourMangaList.Action			ShowURL "http://myanimelist.net/mangalist/" + Prefs.StringUsername			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MyAnimeListYourPanel() As Boolean Handles MyAnimeListYourPanel.Action			ShowURL "http://myanimelist.net/panel.php"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function RefreshYourList() As Boolean Handles RefreshYourList.Action			// Refreshes the list every 15 minutes			window1.refreshlist()			Window1.Timer1.Reset			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function UntitledViewYourProfile() As Boolean Handles UntitledViewYourProfile.Action			ShowURL "http://myanimelist.net/profile/" + Prefs.StringUsername			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub checkforupdates(silentup as boolean)		  // check for updates		  If booleanupdates = true and silentup = true then		  else		    dim v as string		    dim socket1 as new httpsocket		    v = socket1.get("http://chikorita157.notcliche.com/malclientosx/malliteversion.txt" ,10)		    If socket1.HTTPStatusCode = 200 then		      If val(app.ShortVersion) > val(v) or app.shortversion = v then		        If silentup = true then		        else		          msgbox "You're up to date! " + EndOfLine + EndOfLine +  "MAL Lite " + app.shortversion + " is currently the newest version available."		        end if		      else		        Dim d as New MessageDialog //declare the MessageDialog object		        Dim b as MessageDialogButton //for handling the result		        d.icon=MessageDialog.GraphicQuestion //display question icon		        d.ActionButton.Caption="Update"		        d.CancelButton.Visible=True    //show the Cancel button		        d.Message="There is a new update for MAL Lite "		        d.Explanation="Your version of MAL Lite you are using is " + app.shortversion + " and the newest version is " + v +". Do you want to go to the MAL Lite website to download this update?"		        b=d.ShowModal //display the dialog		        Select Case b //determine which button was pressed.		        Case d.ActionButton		          #If TargetWin32		            showurl  "http://mallite.googlecode.com/files/mallite-" + v +"-win.msi"		          #elseif TargetLinux		            showurl  "http://mallite.googlecode.com/files/MALLite-linux-" + v +".zip"		          #endif		        Case d.CancelButton		          //user pressed Cancel		        End select		      end if		    else		      If silentup = true then		      else		        errboxshow("Update Error!.","An error occurred in retrieving update information. Please try again")		      end if		    end if		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub createtray()		  dim s as boolean		  Dim myTrayItem as mintrayitem		  myTrayItem = New mintrayitem		  mytrayitem.HelpTag = "MAL Lite"		  mytrayitem.Icon = Mokotofox64		  s = Me.AddTrayItem( myTrayItem )		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub errboxshow(errtitle as string, errmsg as string)		  Dim b as MessageDialogButton //for handling the result		  // no search term error		  Dim d as New MessageDialog //declare the MessageDialog object		  d.icon=MessageDialog.GraphicCaution //display warning icon		  d.ActionButton.Caption="OK"		  d.Message=errtitle		  d.Explanation=errmsg		  b=d.ShowModal		End Sub	#tag EndMethod	#tag Note, Name = Notes		Project is under the GNU Public Licence V3. If you made any modifications, you must license this project under the GPL V3 to avoid GPL violation.				This project does run in Windows with some glitches, but is not supported. You need to remove anything Mac OS X related (Maclib, Sparkle, MacWindowMenu) before it can compile for Windows.	#tag EndNote	#tag Property, Flags = &h0		loginenc As string	#tag EndProperty	#tag Property, Flags = &h0		MemPassword As string	#tag EndProperty	#tag Property, Flags = &h0		MemUsername As String	#tag EndProperty	#tag Constant, Name = kEditClear, Type = String, Dynamic = False, Default = \"&Delete", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"&Delete"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"&Delete"	#tag EndConstant	#tag Constant, Name = kFileQuit, Type = String, Dynamic = False, Default = \"&Quit", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"E&xit"	#tag EndConstant	#tag Constant, Name = kFileQuitShortcut, Type = String, Dynamic = False, Default = \"", Scope = Public		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"Cmd+Q"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"Ctrl+Q"	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="loginenc"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="MemPassword"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="memusername"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass